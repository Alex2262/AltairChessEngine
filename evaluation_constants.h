//
// Created by Alexander Tian on 6/26/23.
//

#ifndef ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
#define ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H

#include "evaluation.h"
#include "types.h"

constexpr int GAME_PHASE_SCORES[6] = {0, 1, 1, 2, 4, 0};

constexpr int MVV_LVA_VALUES[6] = {  87, 390, 429, 561,1234,   0};


constexpr SCORE_TYPE PIECE_VALUES[6] = {S( 102, 135), S( 415, 423), S( 453, 469), S( 583, 819), S(1228,1496), S(   0,   0)};

constexpr SCORE_TYPE PIECE_SQUARE_TABLES[6][64] = {
        {
                S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51),
                S(  82, 120), S( 113, 112), S(  29, 112), S(  86,  49), S(  49,  73), S( 150,  62), S( -16, 133), S( -44, 142),
                S( -30,  55), S(   9,  42), S(  36,   6), S(  40, -28), S(  70, -38), S(  96, -16), S(  43,  19), S(   0,  34),
                S( -33,  24), S(   3,   8), S(   0,  -7), S(  20, -37), S(  26, -27), S(  28, -19), S(  23,   2), S( -23,   9),
                S( -42,  12), S( -16,   8), S( -18, -12), S(  -1, -19), S(   2, -18), S(  -1, -17), S(  11,  -4), S( -24,  -7),
                S( -44,   2), S( -18,   9), S( -16,  -8), S( -16,  -9), S(  -3,   6), S(  -5,  -2), S(  32,  -2), S( -13, -12),
                S( -50,  14), S( -21,  12), S( -33,  16), S( -40,  11), S( -28,  21), S(  12,   9), S(  38,  -3), S( -21, -18),
                S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51), S( -28, -51)
        },
        {
                S(-242, -68), S(-128, -22), S( -73,  14), S(  -2, -15), S( 129, -28), S(-148,   4), S( -11, -60), S(-151,-119),
                S( -23, -28), S( -44,   7), S(  69,  -6), S(  50,  29), S(  59,  16), S(  96, -17), S(  -7,  -9), S(   4, -40),
                S( -43, -16), S(  43,   5), S(  61,  36), S(  91,  45), S( 126,  17), S( 150,  19), S(  99,  -7), S(  64, -44),
                S(   7,  -4), S(  19,  38), S(  37,  54), S(  61,  60), S(  38,  65), S(  68,  57), S(  28,  41), S(  32,   7),
                S( -15,   6), S( -10,  21), S(  14,  54), S(  15,  65), S(  28,  56), S(  24,  60), S(  43,  28), S(  -3,   8),
                S( -27, -51), S( -11,   4), S(   9,  10), S(   9,  38), S(  18,  31), S(  14,  11), S(  18,  -8), S( -19,  -9),
                S( -50, -48), S( -43, -11), S( -12, -20), S(  -4,  14), S(  -7,  25), S(   5, -20), S( -14, -15), S(  -1, -51),
                S(-138, -47), S( -32, -55), S( -62, -11), S( -51,  -2), S( -30, -14), S( -26, -11), S( -31, -30), S( -68, -59)
        },
        {
                S( -68,  -7), S(  -4,  -8), S(-120,  12), S( -75,  11), S( -78,  13), S( -72,  -1), S( -18,  -7), S(   1, -18),
                S( -38,  -1), S(  15,   2), S(  -1,  13), S( -13,   7), S(  22,  12), S(  60,  -7), S(  18,   2), S( -34,  -8),
                S( -11,   2), S(  26,   4), S(  59,   7), S(  43,  11), S(  57,   2), S(  71,  20), S(  58,  10), S(  10,  11),
                S( -20,  -1), S(   8,  23), S(  17,  24), S(  58,  24), S(  40,  31), S(  49,  13), S(   9,  31), S(  -6,  11),
                S( -14,  -8), S(   6,  12), S(   6,  26), S(  19,  33), S(  37,  19), S(   3,  22), S(   3,   3), S(  15, -23),
                S(  -7, -20), S(   6,   1), S(   5,  11), S(   7,   9), S(   0,  23), S(   8,   8), S(  11,  -9), S(  12, -20),
                S( -11, -28), S(   7, -28), S(  15, -15), S( -11,  -3), S(  -4,  -5), S(  -4, -22), S(  22,  -1), S(   5, -43),
                S(   8, -61), S( -10, -29), S( -30, -12), S( -33, -11), S( -43, -11), S( -30, -12), S( -41,  -4), S( -22, -42)
        },
        {
                S(  62,   9), S(  64,  12), S(  51,  16), S(  62,  17), S( 105,   1), S(  74,   4), S(  38,  10), S( 141, -10),
                S(  27,  15), S(  17,  23), S(  56,  16), S(  72,  16), S(  75,   5), S( 123, -20), S(  47,   2), S(  70,  -5),
                S( -26,  18), S(  12,   9), S(  32,   8), S(  39,   7), S(  54,  -2), S(  93, -11), S( 116, -25), S(  53, -20),
                S( -35,  12), S( -22,   9), S(   6,  14), S(  19,   8), S(   2,  14), S(  24,   2), S( -12,   2), S(  -7,   0),
                S( -65,   9), S( -62,  17), S( -43,  14), S( -34,  17), S( -36,   9), S( -26,  -5), S(  -7,  -9), S( -24, -16),
                S( -76,  -8), S( -50,  -6), S( -53,  -3), S( -49,   1), S( -46,   0), S( -46, -11), S( -14, -17), S( -46, -24),
                S( -86,  -9), S( -46, -15), S( -52,  -2), S( -52,  -5), S( -43,  -9), S( -32, -19), S( -20, -27), S(-114,   2),
                S( -48,  -7), S( -42,   0), S( -33,   3), S( -29,  -1), S( -33,  -3), S( -39,  -7), S( -43,   0), S( -46, -28)
        },
        {
                S( -37,  -8), S( -34,  51), S(  28,  34), S(  49,  21), S( 109,  15), S( 128,  -8), S(  81,   1), S(  51,  18),
                S( -15, -21), S( -57,  28), S( -22,  49), S( -26,  60), S( -17,  81), S(  78,  43), S(  22,  53), S(  35,  29),
                S( -23, -28), S( -16, -11), S(  -1,   6), S( -15,  72), S(   7,  85), S( 109,  34), S( 115,  10), S(  37,  77),
                S( -23, -42), S( -30,  16), S( -21,  29), S( -26,  62), S( -21,  93), S(  13,  76), S(   1,  83), S(  -4,  98),
                S( -27, -29), S( -18,  18), S( -18,   9), S( -28,  61), S( -17,  44), S(  -9,  41), S(   6,  24), S(  -5,  20),
                S( -30, -28), S(   0, -79), S( -18,   4), S( -15, -17), S( -17,  -9), S( -10,  -6), S(  12, -34), S( -12, -14),
                S( -39, -53), S(  -8, -75), S(   3, -87), S( -13, -44), S(  -6, -61), S(   9,-107), S(   5,-106), S( -32, -44),
                S( -11, -65), S( -37, -53), S( -19, -65), S(  -8, -15), S( -21, -68), S( -32, -94), S( -13, -92), S( -49, -86)
        },
        {
                S( -26,-106), S( 261, -90), S( 189, -57), S( 146, -58), S(-180,   3), S( -81,  32), S(  78, -13), S(  30, -32),
                S( 214, -62), S(  75,  21), S(  82,  18), S( 100,   3), S(  72,  17), S(  65,  32), S( -53,  52), S(-153,  28),
                S(  73,  11), S( 111,  25), S(  87,  33), S(  -2,  32), S(  61,  22), S( 119,  52), S( 144,  42), S( -31,  19),
                S(   7,   0), S(   6,  40), S(  20,  46), S( -26,  58), S( -58,  58), S(   4,  52), S(  10,  41), S(-101,  21),
                S( -62, -17), S(  73,  -6), S( -28,  42), S( -86,  63), S( -61,  62), S( -60,  51), S( -31,  28), S( -95,   3),
                S( -20, -17), S( -24,  11), S( -64,  34), S( -78,  47), S( -57,  45), S( -56,  36), S(  -3,  10), S( -27, -11),
                S(  18, -30), S(   8, -12), S( -29,  16), S(-116,  33), S( -77,  30), S( -56,  23), S(  22, -11), S(  40, -41),
                S(  24,-104), S(  68, -62), S(  19, -32), S(-115,  -2), S( -18, -41), S( -76,  -5), S(  36, -40), S(  43, -94)
        }
};


constexpr SCORE_TYPE PASSED_PAWN_BONUSES[3][8] = {
        {S(   0,   0), S(  -8,  -3), S( -25,   6), S( -26,  36), S( -12,  70), S(  16, 154), S(  63, 165), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   3,  26), S(  -2,  53), S(  24, 111), S(  71, 217), S( 351, 182), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  75,  30), S( -26,  53), S(  63,  92), S(  85, 188), S( 168, 121), S(   0,   0)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  18, -45), S( -30,  10), S( -11, -25), S( -13, -71), S(  -6,-108), S( 182,-213)},
        {S(   0,   0), S(   0,   0), S(  -8, -30), S(  -7, -49), S( -11, -45), S(   9, -67), S(  -6,-125), S(  82,-237)},
        {S(   0,   0), S(   0,   0), S(  34, -26), S(  -4,  18), S(  13,   0), S(  28,  -8), S(  22, -49), S(  24,-106)},
        {S(   0,   0), S(   0,   0), S(  -1, -26), S( -58,  56), S(   7, -35), S(   3,  -3), S(  21, -52), S(  96,  62)},
        {S(   0,   0), S(   0,   0), S(  81, -26), S(  65, -31), S( -51, -47), S(  -3, -89), S( -12,-188), S(  40,-307)}
};


constexpr SCORE_TYPE PHALANX_PAWN_BONUSES[8] = {S(   0,   0), S(   0,   6), S(  -2,   4), S(  14,  24), S(  34,  90), S(  61, 145), S(  -2, 428), S(   0,   0)};


#endif //ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
