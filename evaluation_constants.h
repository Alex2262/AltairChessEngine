//
// Created by Alexander Tian on 6/26/23.
//

#ifndef ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
#define ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H

#include "evaluation.h"
#include "types.h"

constexpr int GAME_PHASE_SCORES[6] = {0, 1, 1, 2, 4, 0};

constexpr int MVV_LVA_VALUES[6] = {  87, 390, 429, 561,1234,   0};


constexpr SCORE_TYPE PIECE_VALUES[6] = {S( 104, 148), S( 419, 431), S( 459, 479), S( 591, 834), S(1246,1522), S(   0,   0)};

constexpr SCORE_TYPE PIECE_SQUARE_TABLES[6][64] = {
        {
                S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55),
                S(  85, 135), S( 111, 121), S(  23, 123), S(  84,  58), S(  42,  80), S( 148,  69), S( -21, 139), S( -44, 153),
                S( -27,  61), S(   9,  44), S(  37,   9), S(  40, -27), S(  71, -38), S(  96, -15), S(  42,  15), S(   2,  39),
                S( -29,  27), S(   2,   5), S(   0,  -4), S(  20, -36), S(  27, -24), S(  29, -17), S(  22,  -5), S( -21,  12),
                S( -39,  15), S( -18,   1), S( -17,  -9), S(  -1, -16), S(   3, -15), S(   1, -16), S(   9, -15), S( -24,  -5),
                S( -41,   4), S( -22,  -3), S( -17,  -7), S( -16,  -7), S(  -3,   6), S(  -4,  -2), S(  29, -19), S( -12,  -8),
                S( -47,  17), S( -23,   3), S( -32,  18), S( -38,  11), S( -26,  23), S(  14,   6), S(  38, -17), S( -18, -12),
                S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55)
        },
        {
                S(-246, -67), S(-134, -21), S( -76,  15), S(   1, -16), S( 122, -25), S(-152,   6), S( -11, -64), S(-158,-119),
                S( -24, -32), S( -45,   6), S(  69,  -8), S(  50,  30), S(  58,  17), S(  95, -19), S(  -7, -12), S(   5, -42),
                S( -43, -15), S(  44,   5), S(  64,  37), S(  92,  45), S( 127,  17), S( 151,  20), S( 101,  -6), S(  66, -44),
                S(   7,  -5), S(  19,  38), S(  38,  55), S(  62,  62), S(  39,  66), S(  69,  57), S(  29,  42), S(  33,   7),
                S( -15,   5), S( -10,  22), S(  14,  55), S(  16,  66), S(  28,  57), S(  25,  61), S(  44,  29), S(  -3,   7),
                S( -27, -52), S( -10,   4), S(   9,  11), S(  10,  39), S(  19,  32), S(  14,  12), S(  19,  -7), S( -19,  -9),
                S( -49, -48), S( -43, -10), S( -11, -19), S(  -4,  14), S(  -7,  26), S(   5, -19), S( -13, -15), S(  -1, -50),
                S(-139, -47), S( -32, -57), S( -61, -11), S( -51,  -1), S( -29, -15), S( -25, -10), S( -32, -33), S( -66, -67)
        },
        {
                S( -69,  -9), S(  -4, -11), S(-119,  11), S( -76,  10), S( -79,  13), S( -75,   0), S( -23,  -4), S(   0, -21),
                S( -40,  -1), S(  14,   1), S(  -1,  12), S( -15,   7), S(  23,  10), S(  60,  -6), S(  16,   1), S( -33, -10),
                S( -10,   2), S(  26,   5), S(  59,   8), S(  44,  10), S(  58,   3), S(  74,  19), S(  59,  10), S(  10,  14),
                S( -20,   0), S(   8,  23), S(  16,  25), S(  58,  25), S(  40,  31), S(  49,  12), S(   9,  31), S(  -5,  12),
                S( -13, -10), S(   6,  11), S(   6,  26), S(  19,  34), S(  37,  19), S(   3,  23), S(   3,   2), S(  15, -24),
                S(  -7, -20), S(   7,   2), S(   5,  11), S(   7,  10), S(   0,  24), S(   8,   8), S(  11,  -8), S(  12, -21),
                S( -10, -29), S(   7, -28), S(  16, -15), S( -11,  -1), S(  -4,  -3), S(  -4, -22), S(  22,   0), S(   4, -42),
                S(   7, -63), S( -10, -29), S( -31, -12), S( -33,  -9), S( -42, -12), S( -30, -11), S( -39,  -5), S( -21, -43)
        },
        {
                S(  60,  10), S(  64,  13), S(  51,  17), S(  65,  16), S( 107,   1), S(  74,   3), S(  42,   9), S( 143,  -9),
                S(  28,  15), S(  16,  24), S(  56,  16), S(  71,  17), S(  74,   6), S( 123, -20), S(  48,   2), S(  73,  -6),
                S( -24,  18), S(  13,  10), S(  32,   8), S(  40,   7), S(  55,  -2), S(  94, -11), S( 116, -25), S(  56, -20),
                S( -35,  12), S( -21,  10), S(   6,  15), S(  20,   8), S(   2,  15), S(  24,   2), S( -12,   2), S(  -6,   1),
                S( -65,   9), S( -63,  18), S( -43,  14), S( -34,  17), S( -37,  10), S( -27,  -6), S(  -6,  -9), S( -26, -15),
                S( -77,  -7), S( -50,  -5), S( -53,  -3), S( -49,   0), S( -46,   0), S( -46, -12), S( -14, -17), S( -47, -24),
                S( -87, -11), S( -47, -15), S( -53,  -2), S( -52,  -6), S( -44, -11), S( -34, -20), S( -20, -29), S(-115,  -1),
                S( -50,  -7), S( -43,   1), S( -34,   3), S( -30,  -1), S( -34,  -3), S( -41,  -7), S( -43,   1), S( -47, -30)
        },
        {
                S( -40,  -5), S( -30,  48), S(  27,  36), S(  49,  20), S( 109,  17), S( 131,  -9), S(  79,   4), S(  51,  20),
                S( -15, -24), S( -58,  28), S( -23,  48), S( -26,  62), S( -19,  83), S(  80,  41), S(  22,  51), S(  36,  32),
                S( -23, -30), S( -16, -13), S(   0,   4), S( -15,  72), S(   7,  86), S( 110,  33), S( 116,  14), S(  38,  79),
                S( -23, -45), S( -30,  16), S( -21,  30), S( -26,  62), S( -21,  94), S(  12,  80), S(   2,  84), S(  -4,  98),
                S( -26, -30), S( -18,  17), S( -18,  10), S( -28,  62), S( -18,  45), S(  -9,  42), S(   6,  24), S(  -5,  21),
                S( -29, -29), S(   0, -80), S( -18,   5), S( -15, -16), S( -17,  -8), S( -10,  -7), S(  12, -35), S( -12, -15),
                S( -39, -54), S(  -9, -74), S(   3, -88), S( -13, -42), S(  -6, -61), S(   9,-106), S(   4,-106), S( -32, -47),
                S( -12, -64), S( -38, -53), S( -20, -64), S(  -9, -16), S( -21, -69), S( -32, -95), S( -13, -91), S( -48, -92)
        },
        {
                S( -24,-109), S( 257, -89), S( 193, -57), S( 143, -58), S(-176,   4), S( -79,  33), S(  75, -11), S(  29, -30),
                S( 229, -66), S(  80,  20), S(  73,  21), S(  97,   5), S(  77,  17), S(  64,  35), S( -49,  55), S(-150,  29),
                S(  71,  13), S( 110,  26), S(  84,  35), S(   0,  32), S(  61,  22), S( 120,  54), S( 146,  44), S( -31,  21),
                S(  11,  -1), S(   3,  41), S(  15,  48), S( -27,  59), S( -64,  60), S(   1,  54), S(  15,  43), S( -93,  21),
                S( -57, -18), S(  72,  -6), S( -23,  41), S( -85,  63), S( -64,  63), S( -58,  51), S( -31,  28), S( -94,   3),
                S( -17, -19), S( -24,  11), S( -64,  34), S( -78,  47), S( -56,  45), S( -55,  37), S(  -2,   9), S( -27, -12),
                S(  17, -32), S(   9, -13), S( -31,  16), S(-117,  33), S( -78,  31), S( -57,  23), S(  22, -11), S(  42, -42),
                S(  25,-105), S(  69, -63), S(  19, -33), S(-117,  -4), S( -19, -42), S( -77,  -5), S(  36, -41), S(  44, -95)
        }
};


constexpr SCORE_TYPE PASSED_PAWN_BONUSES[3][8] = {
        {S(   0,   0), S(  -6,  23), S( -22,  36), S( -24,  66), S( -11,  98), S(  15, 180), S(  64, 185), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   6,  29), S(   1,  52), S(  25, 105), S(  70, 209), S( 349, 171), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  77,  27), S( -21,  39), S(  64,  67), S(  93, 163), S( 141,  71), S(   0,   0)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  20, -42), S( -29,  10), S( -11, -23), S( -12, -72), S(  -6,-111), S( 185,-215)},
        {S(   0,   0), S(   0,   0), S(  -9, -26), S(  -7, -48), S( -11, -44), S(   9, -67), S(  -6,-126), S(  86,-240)},
        {S(   0,   0), S(   0,   0), S(  35, -22), S(  -5,  24), S(  14,   2), S(  28,  -6), S(  24, -51), S(  26,-107)},
        {S(   0,   0), S(   0,   0), S(   0, -22), S( -56,  56), S(   8, -36), S(   6,  -9), S(  23, -58), S(  99,  63)},
        {S(   0,   0), S(   0,   0), S(  80, -19), S(  66, -26), S( -50, -44), S(  -4, -90), S( -16,-190), S(  39,-311)}
};


constexpr SCORE_TYPE PHALANX_PAWN_BONUSES[8] = {S(   0,   0), S(  -3, -10), S(   0,  -5), S(  13,   7), S(  33,  67), S(  58, 120), S(   0, 404), S(   0,   0)};

constexpr SCORE_TYPE ISOLATED_PAWN_PENALTY = S(  -7, -47);
#endif //ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
