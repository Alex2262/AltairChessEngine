//
// Created by Alexander Tian on 6/26/23.
//

#ifndef ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
#define ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H

#include "evaluation.h"
#include "types.h"

constexpr int GAME_PHASE_SCORES[6] = {0, 1, 1, 2, 4, 0};

constexpr int MVV_LVA_VALUES[6] = {  87, 390, 429, 561,1234,   0};

constexpr SCORE_TYPE CANONICAL_PIECE_VALUES[6] = {100, 310,340, 500, 900, 0};

constexpr SCORE_TYPE MAX_MINOR_PIECE_VALUE = CANONICAL_PIECE_VALUES[BISHOP];
constexpr SCORE_TYPE MIN_MINOR_PIECE_VALUE = CANONICAL_PIECE_VALUES[KNIGHT];



constexpr SCORE_TYPE PIECE_VALUES[6] = {S( 118, 141), S( 507, 439), S( 493, 416), S( 676, 764), S(1509,1351), S(   0,   0)};

constexpr SCORE_TYPE PIECE_SQUARE_TABLES[6][64] = {
        {
                S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57),
                S( 137, 103), S( 106, 101), S(  67,  84), S(  99,  46), S(  46,  74), S( 114, 100), S( -42, 159), S(  23, 155),
                S(  -9,  47), S(  -6,  43), S(  14,  19), S(  22,   2), S(  41,   1), S(  16,  27), S( -17,  55), S( -22,  75),
                S( -14,   8), S(  -3,   1), S(  -2,  -5), S(  13, -16), S(  12,  -7), S(  11,  -1), S(  15,   6), S( -35,  19),
                S( -18,  -8), S( -22,  -3), S(  -3, -13), S(  10, -13), S(   5, -11), S(  13,  -9), S( -11,  -2), S( -35,   1),
                S( -18, -19), S( -17, -14), S(  -4, -13), S(   3, -11), S(  11,   0), S(  16, -10), S(  23, -14), S( -14, -10),
                S( -16,  -7), S( -21, -11), S( -18,   4), S(  -7,  -3), S( -12,  15), S(  30, -13), S(  20, -10), S( -10,  -6),
                S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57), S( -31, -57)
        },
        {
                S(-223, -58), S(-134, -22), S( -82,  12), S(   5, -18), S(  72, -21), S(-157,   3), S( -34, -63), S(-145,-104),
                S( -23, -25), S( -37,   5), S(  31,  -7), S(  27,  29), S(  23,  18), S(  31,  -7), S( -38,  -7), S( -25, -35),
                S( -22, -20), S(  32,   5), S(  59,  27), S(  85,  32), S(  95,  16), S( 113,  14), S(  54,  -4), S(  40, -44),
                S(  32,  -5), S(  46,  27), S(  54,  43), S(  72,  52), S(  51,  62), S(  64,  47), S(  35,  31), S(  36,   2),
                S(  10,   0), S(  22,  14), S(  39,  41), S(  40,  55), S(  41,  47), S(  31,  41), S(  36,  28), S(  -4,   0),
                S(  -8, -23), S(   6,  -1), S(  19,  10), S(  18,  33), S(  26,  29), S(  15,   1), S(   6,  -6), S( -15, -17),
                S( -37, -36), S( -24,  -3), S( -10,   1), S(   5,  10), S(  -3,  19), S(  -7,  -3), S( -19, -14), S( -16, -35),
                S( -93, -40), S( -19, -40), S( -27,  -7), S( -28,   8), S( -12,  -8), S( -22,  -3), S( -31, -35), S( -74, -50)
        },
        {
                S( -22,  -7), S(  20,  -5), S( -90,  12), S( -67,  11), S( -79,  18), S( -92,  10), S(  13,  -4), S(  58, -24),
                S( -14,   6), S(  12,   4), S(   3,  11), S( -26,  10), S( -18,  18), S(  -4,  11), S( -14,   5), S( -48,   5),
                S(  32,  -5), S(  35,   5), S(  52,  -1), S(  20,   9), S(  24,   4), S(  32,  21), S(  29,  20), S(  19,  14),
                S(  -2,  -1), S(  20,  14), S(   1,  20), S(  44,  12), S(  19,  18), S(   6,  14), S(  -7,  25), S(  -9,  15),
                S(   2,  -6), S(   6,   3), S(  11,  11), S(  21,  16), S(  29,   0), S( -11,  16), S(  -4,   2), S(   3, -10),
                S(  -2, -17), S(  17,  -4), S(  11,   2), S(   3,   8), S(   0,  22), S(  11,   3), S(   8,   0), S(   8, -20),
                S(   1, -31), S(  13, -33), S(  12, -15), S(  -6,  -6), S(   0,  -3), S(  -2, -13), S(  27, -19), S(   0, -45),
                S(  15, -55), S(   0, -26), S( -14, -13), S( -11,  -5), S( -26,  -2), S( -23,   0), S( -28,   6), S( -20, -33)
        },
        {
                S(  19,   7), S(  21,  11), S( -20,  22), S( -27,  26), S(   7,  15), S(  -9,  19), S( -40,  25), S(  60,   4),
                S(  12,   8), S(  -3,  16), S(  23,   8), S(  31,  10), S(  17,   9), S(  38,  -2), S(  -9,  16), S(  25,   2),
                S(  -6,   6), S(  21,  -1), S(  30,  -3), S(  30,  -4), S(  25,  -4), S(  52,  -3), S(  75, -14), S(  33, -16),
                S(  -2,   4), S(   4,  -1), S(  20,   5), S(  32,  -4), S(   9,   5), S(  27,   2), S( -15,   6), S(  -2,   4),
                S( -26,   7), S( -26,  12), S( -19,   9), S( -12,  11), S( -18,   8), S(  -7,  -2), S(  -1,  -1), S( -22,  -2),
                S( -27, -11), S( -15,  -5), S( -21,  -3), S( -15,   0), S( -20,   3), S( -10, -10), S(   1,  -5), S( -28, -11),
                S( -35,  -9), S( -13, -15), S( -22,  -1), S( -12,  -6), S( -11,  -6), S(  -7, -14), S(  -3, -20), S( -81,   8),
                S(   3, -21), S(  -4, -10), S(  -2,  -8), S(   4, -15), S(  -3, -15), S(   0,  -9), S( -21,  -5), S(  -7, -32)
        },
        {
                S( -39, -15), S( -46,  32), S(  -9,   7), S( -13, -17), S(   7,   7), S(  12,   9), S(  49, -20), S(  14,  -3),
                S(   2, -17), S( -48,  21), S( -37,  29), S( -69,  42), S(-109,  72), S( -40,  39), S(  -9,  14), S(  -7,  22),
                S(   5, -24), S(  -4, -16), S( -11, -14), S( -57,  45), S( -55,  43), S(  17,  19), S(  16,  21), S( -23,  78),
                S(   9, -28), S(   5,   0), S( -17,  19), S( -28,  26), S( -40,  45), S( -25,  40), S( -19,  46), S(  -6,  37),
                S(  24, -30), S(  20,  18), S(  13,   3), S(  -4,  41), S(  -5,  21), S( -10,  30), S(  10,  10), S(  -4,  14),
                S(  23, -21), S(  43, -45), S(  20,  10), S(  13,   1), S(   4,   9), S(   4,  22), S(  17,   7), S(   0,  19),
                S(  25, -31), S(  37, -39), S(  43, -52), S(  25,  -7), S(  26, -31), S(  27, -43), S(  19, -46), S(  -7, -12),
                S(  56, -57), S(  32, -54), S(  37, -45), S(  42, -55), S(  21, -31), S(  10, -49), S(  34, -69), S( -18, -44)
        },
        {
                S(-263, -38), S( 171, -44), S( 232, -37), S( 113, -42), S(-203,  18), S( -29,  41), S(  36,  15), S( -18,  -9),
                S( 109, -25), S( 149,  22), S( 145,  32), S( 107,  15), S(  58,  19), S( 155,  36), S(  51,  45), S(-164,  38),
                S(  65,  13), S( 163,  21), S( 186,  26), S(  68,  12), S( 149,   0), S( 227,  39), S( 239,  33), S(   7,  24),
                S( -19,  16), S(  58,  28), S( 126,  27), S(  77,  20), S(  43,  17), S( 139,  31), S(  95,  23), S( -87,  25),
                S( -76,  -2), S( 121, -15), S(  80,  20), S(  51,  14), S(  82,   9), S( 104,  21), S(  90,   8), S( -71,   7),
                S(-103,   6), S( -23,  14), S(   3,  21), S(  61,   1), S(  76,  -4), S(  80,  16), S(  50,   9), S( -29,   0),
                S( -91,  -5), S( -76,   8), S( -69,  21), S( -74,   6), S( -36,   1), S( -34,  28), S(  -1,   6), S( -17, -16),
                S( -82, -86), S( -56, -34), S( -98,  -3), S(-109, -23), S( -30, -62), S(-105,  14), S( -14, -19), S( -21, -71)
        }
};


constexpr SCORE_TYPE PASSED_PAWN_BONUSES[3][8] = {
        {S(   0,   0), S(   0,  12), S(  -8,  19), S(  -8,  41), S(  10,  64), S(  43, 132), S(  69, 174), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   3,  23), S(  -3,  43), S(  32,  86), S(  89, 185), S( 341, 179), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  41,  30), S(  -9,  29), S(  74,  63), S( 154, 129), S( 314, 109), S(   0,   0)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  24, -48), S(  -4,  -2), S(  -9, -22), S( -22, -66), S( -25, -99), S( 118,-218)},
        {S(   0,   0), S(   0,   0), S(  -7, -31), S(  -5, -47), S(  -5, -40), S(   4, -64), S( -21,-130), S(  49,-260)},
        {S(   0,   0), S(   0,   0), S(  22, -20), S( -16,  27), S(  -2,   4), S(  15,  -5), S( -11, -41), S(  -2,-126)},
        {S(   0,   0), S(   0,   0), S(   8, -22), S( -46,  17), S(  14, -54), S(  -8,  15), S(  19, -53), S(  41,  68)},
        {S(   0,   0), S(   0,   0), S(  39,  20), S(  29,  18), S( -82,  11), S( -53, -19), S(-127, -84), S(  15,-177)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS_2[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   4, -18), S( -19, -11), S(  -8,  -5), S(   4, -21), S(  32,-112)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(  12, -17), S(   0, -11), S( -15,   0), S(  -3, -33), S(  25, -72)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(  20, -23), S(  31, -23), S(  -8,  19), S(   4,   6), S(  31, -54)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(  32, -36), S( -11,   6), S(   1, -22), S(  19, -24), S(   8,  74)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S( 135,  -8), S(  24,  -1), S( -76,   8), S( -29, -19), S(   9, -90)}
};


constexpr SCORE_TYPE PHALANX_PAWN_BONUSES[8] = {S(   0,   0), S(  -9, -12), S(  -7,  -4), S(  13,  12), S(  38,  69), S(  29, 164), S(  49, 448), S(   0,   0)};

constexpr SCORE_TYPE ISOLATED_PAWN_PENALTY = S( -13, -14);

constexpr SCORE_TYPE BISHOP_PAIR_BONUS = S(  29,  67);

constexpr SCORE_TYPE TEMPO_BONUS = S(  25,  23);

constexpr SCORE_TYPE MOBILITY_VALUES[6] = {S(   0,   0), S(   7,   2), S(   7,   6), S(   6,   5), S(   3,   5), S(   0,   0)};

constexpr SCORE_TYPE SEMI_OPEN_FILE_VALUES[6] = {S(   0,   0), S(   0,   0), S(   0,   0), S(  21,  -1), S(   1,  15), S( -21,   9)};

constexpr SCORE_TYPE OPEN_FILE_VALUES[6] = {S(   0,   0), S(   0,   0), S(   0,   0), S(  42,  -5), S(  -7,  17), S( -53,   0)};

constexpr SCORE_TYPE PIECE_THREATS[6][6] = {
        {S(  12, -14), S(  76,  40), S(  73,  80), S( 110,  -1), S(  75,  37), S( 238,  58)},
        {S( -11,  13), S(   0,   0), S(  32,  43), S(  62,  23), S(  48,   9), S( 130,  17)},
        {S(   1,  15), S(  31,  47), S( -39, -80), S(  46,  37), S(  52,  66), S(  79,  73)},
        {S( -13,  24), S(  -3,  29), S(   3,  36), S( -19,  17), S(  43,  55), S( 119,  35)},
        {S(  -5,  14), S(   4,   2), S(  -1,  36), S( -13,  36), S(  -5,   1), S(  70, 108)},
        {S(  13,  45), S(   3,  21), S( -23,  35), S(   3,  24), S(-234,  49), S(   0,   0)}
};


constexpr SCORE_TYPE KING_RING_ATTACKS[2][6] = {
        {S(  44, -12), S(  36, -18), S(  46, -11), S(  44, -14), S(  41,  -4), S(   0,   0)},
        {S(  23,  -9), S(  25,  -4), S(  26,  -5), S(  18,  -4), S(  22,   5), S(   0,   0)}
};


constexpr SCORE_TYPE TOTAL_KING_RING_ATTACKS[40] = {S(  66, -13), S(  41, -17), S(  16, -15), S(  -5, -12), S( -25,  -8), S( -39,  -4), S( -51,   0), S( -57,   3), S( -67,   8), S( -73,   8), S( -72,  10), S( -66,   9), S( -70,  13), S( -71,  15), S( -66,  17), S( -67,  19), S( -55,  18), S( -51,  22), S( -60,  26), S( -14,   5), S( -51,  27), S( -25,  16), S(  35,   8), S( -14,  26), S(  72,  -9), S(  19,  40), S( 184, -60), S( -50,  94), S(  73,  41), S(  90, -72), S( 497,-201), S( 235,  16), S( 201,   2), S( 187,  88), S( 342,-103), S(-106,   3), S( -42,  -1), S( 353, 110), S(   2,   1), S(-108,  -8)};

constexpr SCORE_TYPE KING_PAWN_SHIELD[5][8] = {
        {S(  29, -20), S(  46, -10), S(  45,  -9), S(   0,   0), S(   0,   0), S(   6,   7), S(  27, -10), S(   8, -26)},
        {S(  31, -11), S(  34,  -6), S(  11,   2), S(   0,   0), S(   0,   0), S(  -8,  -2), S(   7, -10), S(  13,  -9)},
        {S(  23,   8), S( -17,  13), S(   6,   2), S(   0,   0), S(   0,   0), S(  -8,  -4), S(  -3,  -3), S(   8,  -3)},
        {S(   4,  40), S( -12,  41), S( -24,  41), S(   0,   0), S(   0,   0), S(  17,  -6), S( -30,  16), S(   6,  13)},
        {S( -15, -12), S( -24, -12), S(  -9, -11), S(   0,   0), S(   0,   0), S( -18,  -1), S( -21,   1), S( -24,   4)}
};


constexpr SCORE_TYPE KING_PAWN_STORM[6][8] = {
        {S( 136, 104), S(  27, 114), S( 109,  -3), S(   0,   0), S(   0,   0), S(  14,  80), S(  19,  96), S(  88,  93)},
        {S(   2,  43), S( -58,  58), S( -98,  46), S(   0,   0), S(   0,   0), S( -56,  21), S( -78,  55), S( -36,  65)},
        {S(   2,  16), S(  28,   7), S(  -6,  17), S(   0,   0), S(   0,   0), S(   7,   3), S(  21,   0), S(  -1,   5)},
        {S(   0, -14), S(  17,  -6), S(  16,   6), S(   0,   0), S(   0,   0), S(   4,   2), S(   0,  -1), S(  -6,  -6)},
        {S(   2, -21), S(  27, -26), S(  24,  -2), S(   0,   0), S(   0,   0), S(   7, -12), S(  16, -14), S(   5, -16)},
        {S(  -9,  -8), S( -11,   1), S(  14,   9), S(   0,   0), S(   0,   0), S(   3,  -3), S( -12,  -4), S(   0, -14)}
};


constexpr SCORE_TYPE OPP_KING_TROPISM[6] = {S(   0,   0), S(  -1,  -3), S(   2,   1), S(  -4,   2), S(  -7,   2), S(   0,   0)};

constexpr SCORE_TYPE OUR_KING_TROPISM[6] = {S(   0,   0), S(  -5,   1), S(  -6,   1), S(  -1,   1), S(  -2,   4), S(   0,   0)};

constexpr SCORE_TYPE DOUBLED_PAWN_PENALTY = S( -20, -28);

constexpr SCORE_TYPE SQUARE_OF_THE_PAWN = S( -11,  63);

constexpr SCORE_TYPE BACKWARDS_PAWN_PENALTY = S( -12,   1);






#endif //ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
