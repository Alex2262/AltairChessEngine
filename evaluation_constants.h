//
// Created by Alexander Tian on 6/26/23.
//

#ifndef ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
#define ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H

#include "evaluation.h"
#include "types.h"

constexpr int GAME_PHASE_SCORES[6] = {0, 1, 1, 2, 4, 0};

constexpr int MVV_LVA_VALUES[6] = {  87, 390, 429, 561,1234,   0};

constexpr SCORE_TYPE CANONICAL_PIECE_VALUES[6] = {100, 310,340, 500, 900, 0};

constexpr SCORE_TYPE MAX_MINOR_PIECE_VALUE = CANONICAL_PIECE_VALUES[BISHOP];
constexpr SCORE_TYPE MIN_MINOR_PIECE_VALUE = CANONICAL_PIECE_VALUES[KNIGHT];



constexpr SCORE_TYPE PIECE_VALUES[6] = {S( 117, 162), S( 475, 446), S( 460, 432), S( 666, 783), S(1475,1421), S(   0,   0)};

constexpr SCORE_TYPE PIECE_SQUARE_TABLES[6][64] = {
        {
                S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63),
                S( 119, 139), S( 100, 129), S(  62, 106), S( 103,  55), S(  35,  80), S( 118, 118), S( -48, 180), S(   9, 187),
                S( -12,  62), S(   3,  48), S(  20,  19), S(  30, -14), S(  42, -18), S(  11,  24), S( -13,  54), S( -32,  89),
                S( -15,  20), S(   8,  -3), S(   0, -10), S(  17, -32), S(  19, -20), S(  12,  -5), S(  21,   0), S( -37,  23),
                S( -18,   3), S( -11,  -6), S(  -3, -20), S(   9, -23), S(   7, -20), S(  14, -12), S(  -7,  -7), S( -39,   4),
                S( -20,  -8), S(  -6, -16), S(  -4, -18), S(   1, -19), S(  12,  -6), S(  15, -16), S(  28, -22), S( -21,  -7),
                S( -23,   5), S(  -8, -10), S( -20,   5), S(  -9, -11), S( -12,  10), S(  25, -18), S(  32, -16), S( -23,  -1),
                S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63), S( -31, -63)
        },
        {
                S(-250, -57), S(-155, -20), S( -97,  14), S( -19, -15), S(  52, -18), S(-177,   6), S( -35, -65), S(-159,-109),
                S( -44, -24), S( -55,   7), S(  18,  -4), S(  12,  32), S(  16,  18), S(  25,  -8), S( -41,  -8), S( -28, -36),
                S( -38, -18), S(  18,   8), S(  47,  31), S(  74,  35), S(  88,  16), S( 112,  16), S(  56,  -1), S(  39, -44),
                S(  17,  -3), S(  34,  33), S(  47,  45), S(  71,  54), S(  50,  59), S(  66,  48), S(  37,  30), S(  38,   3),
                S(   1,   7), S(  16,  15), S(  38,  43), S(  44,  55), S(  48,  47), S(  41,  44), S(  52,  22), S(   4,   6),
                S( -11, -43), S(   7,   1), S(  23,   9), S(  27,  30), S(  38,  22), S(  27,   1), S(  24, -11), S(  -7,  -4),
                S( -33, -36), S( -14,  -8), S(   6, -18), S(  19,  14), S(  13,  24), S(  15, -17), S(   5, -14), S(   7, -41),
                S( -95, -40), S( -15, -32), S( -20,  -8), S( -15,   6), S(   0, -10), S(  -2,  -5), S( -17, -21), S( -45, -67)
        },
        {
                S( -62,  -3), S(  -6,  -2), S(-111,  15), S( -86,  14), S( -95,  20), S(-123,  15), S( -23,   1), S(  30, -21),
                S( -39,   9), S( -11,   8), S( -16,  14), S( -38,  11), S( -28,  18), S(  -2,   9), S( -25,   7), S( -67,   8),
                S(   8,   1), S(  18,  10), S(  40,   5), S(  14,  10), S(  21,   5), S(  38,  20), S(  40,  17), S(  12,  17),
                S( -19,   4), S(   8,  22), S(  -3,  23), S(  45,  14), S(  23,  18), S(  20,  11), S(  -2,  30), S(  -8,  18),
                S(  -6,  -7), S(   3,   5), S(  11,  12), S(  27,  16), S(  40,   1), S(   0,  17), S(  12,  -1), S(  14, -15),
                S(  -5, -20), S(  21,  -6), S(  18,  -1), S(  16,   0), S(  16,  18), S(  30,  -4), S(  27,  -6), S(  23, -22),
                S(   5, -33), S(  23, -37), S(  29, -23), S(  13, -11), S(  22, -12), S(  23, -24), S(  48,  -5), S(  21, -42),
                S(  28, -64), S(   9, -29), S(  -5,   5), S(   3,  -8), S( -11,  -7), S(  -4,   3), S( -10,   0), S(   6, -46)
        },
        {
                S(  10,  16), S(  11,  19), S( -26,  27), S( -29,  30), S(  -1,  20), S(  -6,  21), S( -30,  24), S(  55,  10),
                S(   6,  13), S(  -5,  20), S(  22,  12), S(  31,  14), S(  20,  10), S(  39,  -1), S(  -7,  18), S(  20,   6),
                S( -13,   9), S(  20,   1), S(  30,  -1), S(  32,  -3), S(  32,  -7), S(  63,  -6), S(  82, -15), S(  34, -17),
                S(  -8,   6), S(   1,   1), S(  17,   7), S(  34,  -4), S(  13,   4), S(  33,  -1), S( -13,   4), S(  -4,   3),
                S( -31,   7), S( -30,  13), S( -23,   9), S( -14,  10), S( -16,   7), S(  -5,  -5), S(   1,  -5), S( -19,  -6),
                S( -33, -10), S( -19,  -6), S( -25,  -4), S( -17,  -3), S( -22,   1), S( -10, -13), S(   2, -10), S( -26, -17),
                S( -38, -12), S( -15, -16), S( -25,  -3), S( -14, -11), S( -10, -12), S(  -2, -19), S(   1, -25), S( -80,   0),
                S(  -1, -10), S(   0, -10), S(   7, -12), S(  15, -22), S(   8, -20), S(   5,  -7), S( -18,  -6), S(  -8, -29)
        },
        {
                S( -53,   0), S( -65,  50), S( -34,  29), S( -24,  -8), S(  -3,  13), S(   5,  14), S(  39, -19), S(   7,   3),
                S( -11,   5), S( -55,  34), S( -45,  44), S( -77,  52), S(-119,  81), S( -44,  45), S( -19,  25), S( -13,  22),
                S(  -3,  -9), S( -12,   3), S( -11,  -5), S( -64,  57), S( -64,  56), S(  20,  14), S(  24,   1), S( -24,  67),
                S(   0, -14), S(  -1,  19), S( -21,  33), S( -34,  45), S( -40,  52), S( -27,  47), S( -22,  44), S( -18,  53),
                S(  18, -19), S(  19,  22), S(  12,  11), S(  -5,  55), S(  -1,  20), S(  -2,  25), S(  11,   5), S(  -2,  -8),
                S(  21, -19), S(  44, -65), S(  27,   4), S(  18,  -8), S(  15,  -4), S(  15,   3), S(  24, -19), S(   9, -15),
                S(  28, -40), S(  45, -60), S(  48, -72), S(  35, -25), S(  35, -41), S(  43, -77), S(  34, -74), S(   4, -38),
                S(  60, -58), S(  42, -55), S(  53, -53), S(  45,  40), S(  40, -53), S(  30, -79), S(  47, -84), S(  -2, -71)
        },
        {
                S(-275, -67), S( 148, -69), S( 191, -56), S(  83, -59), S(-213,   0), S( -29,  20), S(  70, -11), S( -21, -27),
                S( 113, -46), S( 136,   4), S( 131,  13), S(  95,  -1), S(  62,   0), S( 138,  21), S(  31,  32), S(-156,  24),
                S(  54,   2), S( 166,   7), S( 194,  14), S(  76,   4), S( 157, -11), S( 222,  29), S( 230,  25), S(  -9,  18),
                S( -19,   6), S(  59,  22), S( 130,  22), S(  79,  23), S(  47,  19), S( 143,  29), S( 102,  20), S( -79,  21),
                S( -77,  -7), S( 125, -18), S(  96,  17), S(  54,  23), S(  83,  17), S( 117,  22), S(  99,   7), S( -58,   2),
                S( -98,   0), S( -10,  12), S(  21,  23), S(  67,  10), S(  86,   4), S(  97,  19), S(  68,   8), S( -24,  -2),
                S( -93,  -8), S( -70,   9), S( -45,  22), S( -67,  16), S( -27,   9), S( -17,  34), S(  10,   7), S( -17, -15),
                S(-101, -79), S( -69, -28), S(-100,   4), S(-114, -10), S( -34, -47), S(-102,  22), S( -25,  -9), S( -40, -63)
        }
};


constexpr SCORE_TYPE PASSED_PAWN_BONUSES[3][8] = {
        {S(   0,   0), S( -13,  25), S( -26,  36), S( -25,  66), S(  -8,  98), S(  23, 179), S(  59, 206), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  -5,  31), S(  -8,  55), S(  24, 107), S(  83, 215), S( 350, 193), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  37,  36), S( -18,  40), S(  71,  67), S( 141, 152), S( 295, 101), S(   0,   0)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  23, -48), S(  -7,  -3), S(  -4, -28), S( -18, -71), S( -24,-103), S( 123,-212)},
        {S(   0,   0), S(   0,   0), S(  -5, -34), S(  -7, -46), S(  -6, -43), S(   6, -70), S( -17,-133), S(  59,-256)},
        {S(   0,   0), S(   0,   0), S(  15, -20), S( -17,  29), S(   0,   6), S(  22,  -5), S(   1, -42), S(  11,-116)},
        {S(   0,   0), S(   0,   0), S(  12, -30), S( -64,  59), S(  15, -49), S(   3,  -3), S(  23, -49), S(  33, 134)},
        {S(   0,   0), S(   0,   0), S(   4,  22), S(  36,  18), S( -82,   5), S( -45, -35), S(-111,-112), S(  21,-213)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS_2[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   4, -23), S( -19, -12), S(  -6, -13), S(   9, -30), S(  38,-110)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0, -10), S(  -5,  -7), S( -17,  -4), S(  -3, -36), S(  28, -71)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(  14, -21), S(  29, -23), S(  -8,  19), S(   7,   7), S(  33, -51)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(  17,  -8), S(  -2, -10), S(  -1, -14), S(  25, -35), S(  12,  96)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S( 133,  -6), S(  39,  -2), S( -74,   3), S( -30, -34), S(  14,-116)}
};


constexpr SCORE_TYPE PHALANX_PAWN_BONUSES[8] = {S(   0,   0), S(   0, -14), S(   1,  -8), S(  16,   4), S(  43,  64), S(  34, 154), S(  67, 391), S(   0,   0)};

constexpr SCORE_TYPE ISOLATED_PAWN_PENALTY = S(  -6, -43);

constexpr SCORE_TYPE BISHOP_PAIR_BONUS = S(  28,  69);

constexpr SCORE_TYPE TEMPO_BONUS = S(  25,  28);

constexpr SCORE_TYPE MOBILITY_VALUES[6] = {S(   0,   0), S(   7,   1), S(   7,   5), S(   5,   3), S(   4,  -1), S(   0,   0)};

constexpr SCORE_TYPE SEMI_OPEN_FILE_VALUES[6] = {S(   0,   0), S(   0,   0), S(   0,   0), S(  27,   3), S(   0,  29), S( -20,   6)};

constexpr SCORE_TYPE OPEN_FILE_VALUES[6] = {S(   0,   0), S(   0,   0), S(   0,   0), S(  49,   0), S(  -4,  30), S( -54,   0)};

constexpr SCORE_TYPE PIECE_THREATS[6][6] = {
        {S(  12, -25), S(  76,  37), S(  73,  81), S( 111,   0), S(  73,  44), S( 232,  53)},
        {S( -11,  17), S(   0,   0), S(  31,  47), S(  60,  22), S(  48,  11), S( 128,  19)},
        {S(   0,  15), S(  31,  44), S(   0,   0), S(  48,  34), S(  55,  64), S(  73,  75)},
        {S( -17,  23), S(  -4,  25), S(   2,  33), S(   0,   0), S(  54,  53), S( 123,  31)},
        {S(  -6,  14), S(   2,  10), S(  -3,  38), S(  -9,  30), S(   0,   0), S(  67, 111)},
        {S(  10,  44), S(  -2,  22), S( -41,  40), S( -53,  37), S(-260,  56), S(   0,   0)}
};


constexpr SCORE_TYPE KING_RING_ATTACKS[2][6] = {
        {S(  44, -10), S(  30, -13), S(  40,  -5), S(  43,  -8), S(  38,   5), S(   0,   0)},
        {S(  30,  -9), S(  30,  -2), S(  31,  -3), S(  22,  -2), S(  28,   9), S(   0,   0)}
};


constexpr SCORE_TYPE TOTAL_KING_RING_ATTACKS[30] = {S(  81,   6), S(  50,  -5), S(  16,  -5), S( -13,  -1), S( -35,   5), S( -46,   6), S( -57,   4), S( -66,   7), S( -69,   7), S( -72,   7), S( -72,   7), S( -86,  10), S( -65,  -1), S( -63,   2), S( -42, -16), S( -78,   7), S( -34, -23), S(  52, -76), S(  65, -62), S( 102, -84), S( -56,  10), S( 281,-180), S(  91,-104), S( 202,-323), S(  55,-164), S( 347, 486), S( 169, 246), S( 276, 390), S(   4,   6), S(   1,   1)};

constexpr SCORE_TYPE KING_PAWN_SHIELD[5][8] = {
        {S(  23, -25), S(  39, -14), S(  39, -11), S(   0,   0), S(   0,   0), S(   4,   6), S(  19, -12), S(   6, -24)},
        {S(  29, -15), S(  35, -10), S(   1,   7), S(   0,   0), S(   0,   0), S( -13,  -2), S(   3,  -3), S(   9,  -6)},
        {S(  22,   6), S( -18,  16), S(   1,   8), S(   0,   0), S(   0,   0), S(  -9, -10), S(  -5,   1), S(   6,  -3)},
        {S(   0,  42), S(  -9,  46), S( -23,  41), S(   0,   0), S(   0,   0), S(  18,  -9), S( -33,  22), S(   3,  15)},
        {S( -18,  -4), S( -28,  -4), S( -13,  -3), S(   0,   0), S(   0,   0), S( -22,   1), S( -27,   9), S( -27,  12)}
};


constexpr SCORE_TYPE KING_PAWN_STORM[6][8] = {
        {S( 130, 122), S(  46, 132), S( 106,   6), S(   0,   0), S(   0,   0), S(  17,  92), S(  15, 111), S(  78, 111)},
        {S(  -5,  61), S( -55,  70), S( -91,  52), S(   0,   0), S(   0,   0), S( -63,  27), S( -73,  65), S( -38,  79)},
        {S(  -3,  26), S(  21,  10), S(  -7,  16), S(   0,   0), S(   0,   0), S(   2,   4), S(  21,   0), S(  -2,   9)},
        {S(  -1, -11), S(  14,  -5), S(  12,   3), S(   0,   0), S(   0,   0), S(   1,   4), S(   2,  -1), S(  -6,  -6)},
        {S(   1, -21), S(  26, -25), S(  18,   3), S(   0,   0), S(   0,   0), S(   2, -13), S(  13, -11), S(   2, -18)},
        {S(  -3, -18), S(  -6,  -3), S(  14,   6), S(   0,   0), S(   0,   0), S(   1,  -6), S(  -6,  -8), S(   3, -22)}
};


constexpr SCORE_TYPE OPP_KING_TROPISM[6] = {S(   0,   0), S(  -2,  -2), S(   1,   1), S(  -4,   2), S(  -8,   3), S(   0,   0)};

constexpr SCORE_TYPE DOUBLED_PAWN_PENALTY = S( -27, -17);





#endif //ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
