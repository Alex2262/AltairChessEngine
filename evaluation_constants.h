//
// Created by Alexander Tian on 6/26/23.
//

#ifndef ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
#define ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H

#include "evaluation.h"
#include "types.h"

constexpr int GAME_PHASE_SCORES[6] = {0, 1, 1, 2, 4, 0};

constexpr int MVV_LVA_VALUES[6] = {  87, 390, 429, 561,1234,   0};

constexpr SCORE_TYPE PIECE_VALUES[6] = {S( 102, 138), S( 415, 422), S( 453, 467), S( 582, 816), S(1227,1491), S(   0,   0)};

constexpr SCORE_TYPE PIECE_SQUARE_TABLES[6][64] = {
        {
                S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52),
                S(  84, 117), S( 116, 110), S(  28, 110), S(  85,  50), S(  49,  73), S( 146,  63), S( -17, 133), S( -45, 139),
                S( -30,  53), S(   8,  42), S(  36,   6), S(  39, -26), S(  68, -35), S(  95, -15), S(  42,  21), S(  -1,  32),
                S( -32,  24), S(   3,  11), S(   0,  -5), S(  19, -34), S(  26, -24), S(  28, -14), S(  23,   5), S( -23,  10),
                S( -41,  13), S( -12,   9), S( -14, -12), S(   3, -19), S(   6, -16), S(   2, -15), S(  15,  -1), S( -24,  -7),
                S( -45,   1), S( -19,   9), S( -17,  -9), S( -17,  -8), S(  -4,   5), S(  -6,  -3), S(  31,  -3), S( -13, -13),
                S( -50,  13), S( -21,  12), S( -33,  15), S( -40,  10), S( -28,  22), S(  12,   9), S(  38,  -2), S( -21, -18),
                S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52), S( -28, -52)
        },
        {
                S(-242, -65), S(-125, -23), S( -74,  14), S(  -1, -16), S( 130, -28), S(-148,   4), S( -12, -58), S(-151,-118),
                S( -24, -28), S( -44,   6), S(  69,  -6), S(  51,  28), S(  58,  16), S(  96, -17), S(  -8,  -9), S(   4, -39),
                S( -42, -16), S(  43,   5), S(  61,  36), S(  91,  45), S( 126,  17), S( 150,  19), S(  99,  -7), S(  64, -44),
                S(   7,  -4), S(  19,  38), S(  37,  54), S(  60,  60), S(  38,  65), S(  68,  57), S(  28,  41), S(  31,   7),
                S( -15,   6), S( -10,  21), S(  15,  54), S(  16,  65), S(  28,  56), S(  25,  60), S(  43,  29), S(  -3,   7),
                S( -27, -51), S( -11,   4), S(   9,  10), S(   8,  38), S(  18,  31), S(  14,  11), S(  18,  -8), S( -19, -10),
                S( -50, -48), S( -43, -11), S( -12, -20), S(  -4,  14), S(  -7,  25), S(   5, -20), S( -14, -15), S(  -1, -51),
                S(-138, -47), S( -32, -56), S( -62, -11), S( -51,  -2), S( -31, -13), S( -26, -11), S( -31, -31), S( -68, -57)
        },
        {
                S( -69,  -7), S(  -5,  -7), S(-120,  12), S( -73,  10), S( -75,  12), S( -71,  -2), S( -16,  -9), S(   2, -19),
                S( -37,  -1), S(  15,   2), S(  -1,  13), S( -13,   7), S(  22,  11), S(  60,  -7), S(  19,   2), S( -34,  -8),
                S( -11,   3), S(  26,   4), S(  58,   7), S(  42,  11), S(  56,   2), S(  72,  20), S(  58,  10), S(  10,  11),
                S( -20,  -1), S(   7,  24), S(  17,  24), S(  57,  25), S(  40,  31), S(  49,  13), S(   8,  31), S(  -6,  11),
                S( -14,  -7), S(   6,  12), S(   5,  26), S(  19,  33), S(  37,  19), S(   3,  22), S(   3,   3), S(  15, -24),
                S(  -7, -20), S(   6,   1), S(   6,  11), S(   7,  10), S(   0,  23), S(   8,   9), S(  11,  -9), S(  13, -20),
                S( -11, -28), S(   7, -27), S(  15, -14), S( -11,  -3), S(  -4,  -5), S(  -4, -22), S(  22,  -1), S(   5, -42),
                S(   7, -62), S( -10, -29), S( -30, -12), S( -34, -10), S( -44, -11), S( -30, -12), S( -40,  -5), S( -22, -43)
        },
        {
                S(  62,   9), S(  64,  12), S(  51,  17), S(  63,  17), S( 105,   1), S(  74,   4), S(  38,  10), S( 140, -10),
                S(  27,  15), S(  17,  24), S(  55,  16), S(  72,  17), S(  75,   5), S( 122, -19), S(  46,   2), S(  70,  -6),
                S( -26,  18), S(  12,   9), S(  32,   8), S(  39,   7), S(  54,  -2), S(  94, -12), S( 115, -25), S(  53, -20),
                S( -35,  12), S( -22,   9), S(   5,  14), S(  18,   8), S(   2,  14), S(  24,   2), S( -11,   2), S(  -7,   0),
                S( -64,   9), S( -62,  17), S( -43,  14), S( -34,  17), S( -35,   9), S( -26,  -6), S(  -6,  -8), S( -24, -17),
                S( -76,  -8), S( -50,  -6), S( -52,  -4), S( -49,   0), S( -45,   1), S( -46, -12), S( -14, -17), S( -46, -24),
                S( -85,  -9), S( -46, -15), S( -52,  -2), S( -52,  -5), S( -43,  -9), S( -33, -19), S( -20, -27), S(-114,   2),
                S( -48,  -7), S( -42,   0), S( -33,   3), S( -29,  -1), S( -33,  -3), S( -39,  -7), S( -43,   0), S( -46, -28)
        },
        {
                S( -36,  -9), S( -34,  52), S(  27,  35), S(  48,  21), S( 108,  15), S( 124,  -5), S(  81,   2), S(  53,  17),
                S( -15, -22), S( -57,  28), S( -22,  50), S( -26,  60), S( -16,  81), S(  78,  44), S(  23,  53), S(  35,  30),
                S( -23, -29), S( -16, -11), S(   0,   4), S( -15,  72), S(   7,  85), S( 110,  33), S( 115,  11), S(  37,  78),
                S( -23, -41), S( -30,  17), S( -21,  29), S( -27,  63), S( -20,  92), S(  14,  75), S(   1,  84), S(  -4,  99),
                S( -26, -29), S( -18,  17), S( -18,  10), S( -27,  60), S( -17,  44), S(  -9,  41), S(   6,  24), S(  -4,  19),
                S( -30, -28), S(   0, -79), S( -18,   4), S( -15, -17), S( -17,  -9), S(  -9,  -7), S(  12, -34), S( -12, -14),
                S( -39, -52), S(  -8, -74), S(   3, -87), S( -13, -44), S(  -6, -61), S(   9,-107), S(   5,-105), S( -32, -45),
                S( -11, -64), S( -37, -53), S( -19, -66), S(  -8, -15), S( -21, -68), S( -32, -94), S( -13, -93), S( -50, -86)
        },
        {
                S( -20,-109), S( 258, -88), S( 186, -57), S( 147, -58), S(-179,   2), S( -84,  30), S(  78, -13), S(  30, -34),
                S( 212, -61), S(  80,  19), S(  82,  18), S(  90,   5), S(  75,  16), S(  67,  31), S( -54,  51), S(-151,  26),
                S(  74,  10), S( 107,  25), S(  87,  33), S(  -7,  33), S(  58,  22), S( 119,  52), S( 144,  42), S( -31,  19),
                S(   5,   1), S(   2,  41), S(  18,  47), S( -27,  58), S( -60,  58), S(   1,  53), S(  10,  42), S(-101,  22),
                S( -62, -16), S(  71,  -6), S( -30,  43), S( -86,  64), S( -61,  62), S( -61,  51), S( -32,  28), S( -96,   4),
                S( -19, -17), S( -24,  11), S( -63,  34), S( -78,  47), S( -56,  45), S( -56,  36), S(  -1,   9), S( -27, -11),
                S(  17, -30), S(   7, -12), S( -29,  16), S(-115,  32), S( -77,  30), S( -56,  23), S(  22, -11), S(  40, -42),
                S(  24,-103), S(  68, -61), S(  19, -32), S(-115,  -3), S( -18, -42), S( -76,  -5), S(  36, -40), S(  43, -94)
        }
};


constexpr SCORE_TYPE PASSED_PAWN_BONUSES[3][8] = {
        {S(   0,   0), S(  -7,  -5), S( -25,   4), S( -28,  34), S( -10,  69), S(  17, 154), S(  62, 165), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   3,  23), S(  -3,  51), S(  24, 106), S(  71, 212), S( 346, 178), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  75,  27), S( -27,  50), S(  61,  88), S(  85, 179), S( 178, 121), S(   0,   0)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  16, -44), S( -30,  10), S( -11, -26), S( -13, -75), S(  -5,-111), S( 181,-213)},
        {S(   0,   0), S(   0,   0), S(  -9, -30), S(  -6, -50), S( -12, -46), S(  10, -71), S(  -6,-128), S(  83,-240)},
        {S(   0,   0), S(   0,   0), S(  33, -26), S(  -5,  19), S(  13,  -2), S(  29, -12), S(  22, -51), S(  24,-107)},
        {S(   0,   0), S(   0,   0), S(  -1, -26), S( -59,  59), S(   6, -38), S(   4,  -7), S(  20, -53), S(  99,  60)},
        {S(   0,   0), S(   0,   0), S(  86, -29), S(  64, -30), S( -48, -49), S(   0, -94), S( -11,-192), S(  41,-308)}
};


#endif //ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
