//
// Created by Alexander Tian on 6/26/23.
//

#ifndef ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
#define ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H

#include "evaluation.h"
#include "types.h"

constexpr int GAME_PHASE_SCORES[6] = {0, 1, 1, 2, 4, 0};

constexpr int MVV_LVA_VALUES[6] = {  87, 390, 429, 561,1234,   0};


constexpr SCORE_TYPE PIECE_VALUES[6] = {S( 105, 149), S( 422, 433), S( 435, 473), S( 595, 837), S(1268,1516), S(   0,   0)};

constexpr SCORE_TYPE PIECE_SQUARE_TABLES[6][64] = {
        {
                S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55),
                S(  85, 135), S( 112, 121), S(  25, 122), S(  86,  57), S(  40,  80), S( 146,  69), S( -18, 139), S( -42, 152),
                S( -26,  58), S(  12,  40), S(  37,   9), S(  36, -24), S(  68, -33), S(  95, -10), S(  42,  18), S(   3,  38),
                S( -29,  26), S(   2,   4), S(   0,  -5), S(  20, -36), S(  27, -24), S(  28, -17), S(  22,  -5), S( -22,  12),
                S( -39,  15), S( -18,   1), S( -17,  -9), S(  -1, -16), S(   3, -15), S(   0, -15), S(   9, -15), S( -25,  -5),
                S( -42,   3), S( -22,  -3), S( -17,  -7), S( -16,  -6), S(  -3,   6), S(  -5,  -2), S(  29, -19), S( -12,  -8),
                S( -47,  17), S( -23,   3), S( -33,  19), S( -38,  12), S( -27,  23), S(  14,   7), S(  38, -17), S( -19, -12),
                S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55)
        },
        {
                S(-244, -64), S(-135, -22), S( -75,  14), S(   9, -19), S( 120, -25), S(-151,   3), S(  -6, -68), S(-156,-115),
                S( -23, -31), S( -45,   6), S(  69,  -8), S(  51,  28), S(  58,  16), S(  95, -20), S(  -6, -14), S(   5, -42),
                S( -44, -16), S(  44,   6), S(  63,  37), S(  92,  44), S( 127,  17), S( 151,  18), S( 101,  -6), S(  67, -45),
                S(   7,  -5), S(  19,  38), S(  37,  55), S(  63,  62), S(  39,  67), S(  68,  56), S(  28,  42), S(  33,   7),
                S( -16,   5), S( -11,  22), S(  14,  55), S(  15,  66), S(  28,  57), S(  25,  61), S(  43,  29), S(  -4,   9),
                S( -27, -51), S( -11,   5), S(   9,  12), S(   9,  39), S(  19,  32), S(  14,  13), S(  18,  -6), S( -20,  -8),
                S( -50, -47), S( -43, -11), S( -11, -19), S(  -4,  15), S(  -7,  28), S(   5, -19), S( -15, -15), S(  -1, -49),
                S(-138, -49), S( -33, -54), S( -62, -10), S( -51,  -1), S( -30, -14), S( -26, -10), S( -32, -31), S( -67, -69)
        },
        {
                S( -69,  -8), S(  -3, -10), S(-121,  13), S( -77,  10), S( -75,  14), S( -78,   2), S( -18,   0), S(  -2, -19),
                S( -40,  -1), S(  14,   2), S(  -2,  12), S( -16,   9), S(  24,   9), S(  61,  -4), S(  16,   2), S( -32,  -9),
                S( -10,   3), S(  26,   6), S(  61,   8), S(  43,  11), S(  59,   4), S(  74,  20), S(  59,  12), S(  10,  14),
                S( -20,  -1), S(   8,  25), S(  16,  26), S(  59,  29), S(  40,  32), S(  50,  13), S(   9,  31), S(  -5,  12),
                S( -13, -11), S(   5,  12), S(   6,  27), S(  19,  35), S(  38,  21), S(   3,  24), S(   4,   3), S(  15, -26),
                S(  -7, -22), S(   7,   2), S(   5,  11), S(   7,  11), S(  -1,  24), S(   9,   9), S(  11,  -8), S(  13, -22),
                S( -10, -29), S(   6, -30), S(  16, -17), S( -11,  -4), S(  -4,  -5), S(  -4, -23), S(  23,   0), S(   4, -45),
                S(   7, -67), S(  -9, -31), S( -31, -16), S( -32, -12), S( -42, -14), S( -30, -12), S( -40,  -5), S( -21, -48)
        },
        {
                S(  61,  10), S(  65,  13), S(  50,  17), S(  66,  16), S( 106,   2), S(  74,   3), S(  42,   8), S( 146, -10),
                S(  28,  15), S(  16,  24), S(  55,  16), S(  70,  18), S(  73,   7), S( 122, -19), S(  49,   2), S(  72,  -5),
                S( -25,  18), S(  13,   9), S(  32,   8), S(  39,   7), S(  53,  -3), S(  94, -11), S( 117, -25), S(  57, -21),
                S( -35,  12), S( -21,   9), S(   6,  15), S(  21,   8), S(   2,  14), S(  24,   1), S( -11,   2), S(  -5,   0),
                S( -64,   9), S( -62,  18), S( -43,  14), S( -33,  16), S( -37,   9), S( -27,  -6), S(  -5, -10), S( -26, -16),
                S( -78,  -6), S( -51,  -5), S( -53,  -3), S( -49,   1), S( -46,   1), S( -46, -11), S( -14, -17), S( -48, -24),
                S( -87, -10), S( -47, -15), S( -53,  -2), S( -52,  -5), S( -44, -10), S( -34, -20), S( -20, -28), S(-115,   1),
                S( -50,  -8), S( -43,   0), S( -34,   3), S( -29,  -1), S( -34,  -3), S( -41,  -7), S( -43,   1), S( -47, -29)
        },
        {
                S( -41,  -5), S( -33,  50), S(  26,  36), S(  47,  22), S( 107,  18), S( 131,  -8), S(  81,   3), S(  51,  20),
                S( -15, -24), S( -58,  29), S( -22,  48), S( -27,  62), S( -19,  84), S(  79,  42), S(  22,  52), S(  36,  33),
                S( -23, -30), S( -16, -13), S(   0,   2), S( -16,  72), S(   7,  84), S( 111,  33), S( 117,  12), S(  39,  78),
                S( -23, -45), S( -30,  16), S( -21,  30), S( -25,  61), S( -22,  95), S(  11,  81), S(   2,  85), S(  -4,  97),
                S( -26, -30), S( -18,  18), S( -18,   9), S( -28,  62), S( -17,  44), S(  -8,  41), S(   7,  23), S(  -5,  20),
                S( -29, -31), S(   0, -80), S( -18,   4), S( -15, -18), S( -17,  -9), S( -10,  -7), S(  13, -36), S( -12, -16),
                S( -39, -54), S(  -8, -74), S(   3, -89), S( -13, -43), S(  -5, -61), S(   9,-106), S(   5,-105), S( -32, -46),
                S( -12, -63), S( -38, -52), S( -20, -63), S(  -9, -15), S( -21, -67), S( -31, -95), S( -13, -90), S( -48, -92)
        },
        {
                S( -25,-106), S( 255, -88), S( 189, -56), S( 141, -57), S(-182,   6), S( -79,  33), S(  72, -10), S(  22, -30),
                S( 229, -66), S(  77,  22), S(  68,  24), S(  92,   7), S(  74,  18), S(  64,  35), S( -52,  55), S(-150,  29),
                S(  70,  15), S( 107,  28), S(  80,  38), S(  -7,  36), S(  56,  25), S( 123,  55), S( 143,  46), S( -33,  22),
                S(  12,   2), S(   3,  43), S(   8,  51), S( -34,  63), S( -69,  63), S(  -3,  57), S(  14,  44), S( -92,  23),
                S( -57, -15), S(  69,  -4), S( -26,  44), S( -91,  66), S( -68,  65), S( -61,  53), S( -32,  29), S( -93,   4),
                S( -19, -18), S( -27,  13), S( -66,  35), S( -79,  48), S( -56,  46), S( -56,  37), S(  -3,  10), S( -28, -12),
                S(  19, -33), S(  11, -14), S( -29,  15), S(-115,  32), S( -76,  29), S( -55,  23), S(  24, -12), S(  44, -43),
                S(  30,-109), S(  71, -64), S(  20, -35), S(-115,  -8), S( -18, -45), S( -75,  -7), S(  38, -42), S(  46, -97)
        }
};


constexpr SCORE_TYPE PASSED_PAWN_BONUSES[3][8] = {
        {S(   0,   0), S(  -6,  24), S( -20,  36), S( -22,  67), S( -12, 103), S(   4, 191), S(  63, 186), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   7,  29), S(   3,  53), S(  24, 109), S(  58, 223), S( 363, 161), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  76,  28), S( -18,  38), S(  64,  73), S(  98, 168), S( 147,  59), S(   0,   0)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  21, -44), S( -27,   9), S( -10, -23), S( -13, -71), S(  -9,-111), S( 183,-214)},
        {S(   0,   0), S(   0,   0), S(  -7, -28), S(  -8, -46), S( -11, -43), S(   8, -70), S( -10,-129), S(  89,-246)},
        {S(   0,   0), S(   0,   0), S(  35, -24), S(  -6,  24), S(  13,   3), S(  28,  -7), S(  29, -55), S(  24,-105)},
        {S(   0,   0), S(   0,   0), S(  -3, -22), S( -55,  57), S(   8, -37), S(   8, -12), S(  25, -57), S( 100,  63)},
        {S(   0,   0), S(   0,   0), S(  76, -17), S(  62, -25), S( -51, -44), S(   0, -94), S(  -3,-203), S(  39,-312)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS_2[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S( -24, -12), S( -43,   3), S(  -3,  -9), S(   7, -27), S(  59,-114)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S( -14,   4), S( -29,   6), S( -33,   1), S(  -8, -27), S(  32, -70)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   9, -21), S(  32, -24), S(   2,  15), S(  10,   9), S(  39, -52)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(  -2,  34), S( -16,  11), S(  -2, -20), S(  22, -42), S(  40,  60)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S( 217, -10), S(  57,  -4), S( -30, -12), S(  43, -59), S( 100,-166)}
};


constexpr SCORE_TYPE PHALANX_PAWN_BONUSES[8] = {S(   0,   0), S(  -3, -10), S(  -1,  -5), S(  13,   7), S(  32,  70), S(  38, 151), S(   0, 418), S(   0,   0)};

constexpr SCORE_TYPE ISOLATED_PAWN_PENALTY = S(  -7, -48);

constexpr SCORE_TYPE BISHOP_PAIR_BONUS = S(  25,  78);

#endif //ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
