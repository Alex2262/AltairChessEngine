//
// Created by Alexander Tian on 6/26/23.
//

#ifndef ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
#define ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H

#include "evaluation.h"
#include "types.h"

constexpr int GAME_PHASE_SCORES[6] = {0, 1, 1, 2, 4, 0};

constexpr int MVV_LVA_VALUES[6] = {  87, 390, 429, 561,1234,   0};


constexpr SCORE_TYPE PIECE_VALUES[6] = {S( 108, 151), S( 430, 438), S( 443, 479), S( 604, 848), S(1284,1537), S(   0,   0)};

constexpr SCORE_TYPE PIECE_SQUARE_TABLES[6][64] = {
        {
                S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56),
                S(  88, 140), S( 118, 126), S(  24, 127), S(  88,  61), S(  44,  84), S( 152,  74), S( -10, 144), S( -40, 159),
                S( -26,  58), S(  12,  41), S(  39,   9), S(  37, -25), S(  69, -33), S(  95, -11), S(  43,  18), S(   3,  38),
                S( -30,  25), S(   3,   3), S(   0,  -6), S(  21, -37), S(  29, -26), S(  30, -18), S(  23,  -5), S( -22,  11),
                S( -40,  14), S( -19,   1), S( -18, -10), S(  -1, -17), S(   3, -16), S(   0, -16), S(   8, -15), S( -26,  -5),
                S( -43,   3), S( -23,  -3), S( -18,  -8), S( -17,  -7), S(  -3,   5), S(  -5,  -3), S(  28, -20), S( -13,  -9),
                S( -49,  16), S( -24,   3), S( -34,  18), S( -40,  13), S( -28,  22), S(  13,   6), S(  37, -17), S( -21, -12),
                S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56), S( -29, -56)
        },
        {
                S(-246, -67), S(-134, -23), S( -77,  13), S(   4, -17), S( 118, -28), S(-153,   0), S( -14, -70), S(-153,-120),
                S( -19, -31), S( -39,   6), S(  76,  -8), S(  57,  27), S(  60,  13), S(  99, -20), S(  -5, -14), S(  10, -44),
                S( -42, -15), S(  47,   6), S(  66,  38), S(  94,  45), S( 132,  16), S( 153,  17), S( 104,  -8), S(  68, -45),
                S(   7,  -4), S(  19,  39), S(  39,  58), S(  64,  63), S(  40,  68), S(  70,  57), S(  28,  43), S(  34,   6),
                S( -17,   6), S( -10,  24), S(  15,  56), S(  16,  68), S(  28,  58), S(  25,  62), S(  44,  31), S(  -5,   9),
                S( -31, -51), S( -12,   6), S(   7,  13), S(   9,  40), S(  18,  33), S(  12,  14), S(  18,  -6), S( -22,  -7),
                S( -53, -46), S( -44, -11), S( -13, -18), S(  -7,  16), S(  -9,  28), S(   4, -19), S( -16, -14), S(  -3, -51),
                S(-142, -50), S( -37, -55), S( -63, -10), S( -52,  -1), S( -31, -15), S( -27, -11), S( -36, -32), S( -71, -70)
        },
        {
                S( -72, -10), S(  -8,  -9), S(-125,  12), S( -84,  11), S( -81,  16), S( -88,   3), S( -22,  -4), S(  -2, -23),
                S( -36,  -3), S(  23,   1), S(   2,  12), S( -15,   9), S(  28,   8), S(  66,  -4), S(  23,   0), S( -31, -10),
                S( -10,   4), S(  27,   7), S(  63,   9), S(  45,  11), S(  61,   4), S(  74,  20), S(  59,  13), S(  10,  13),
                S( -19,  -1), S(   7,  26), S(  19,  27), S(  62,  30), S(  43,  33), S(  50,  13), S(   8,  32), S(  -5,  12),
                S( -12, -10), S(   6,  12), S(   6,  27), S(  21,  35), S(  39,  22), S(   2,  24), S(   5,   2), S(  16, -26),
                S(  -8, -21), S(   7,   3), S(   5,  12), S(   6,  12), S(  -2,  25), S(   9,  10), S(  11,  -8), S(  12, -22),
                S( -10, -29), S(   6, -30), S(  16, -17), S( -13,  -4), S(  -5,  -4), S(  -5, -22), S(  22,   0), S(   4, -47),
                S(   7, -68), S( -10, -32), S( -34, -16), S( -33, -12), S( -43, -14), S( -33, -12), S( -40,  -6), S( -21, -49)
        },
        {
                S(  61,  11), S(  68,  13), S(  52,  15), S(  67,  15), S( 109,   0), S(  78,   0), S(  36,  10), S( 140,  -8),
                S(  31,  16), S(  20,  23), S(  59,  16), S(  74,  17), S(  76,   6), S( 125, -19), S(  50,   2), S(  74,  -5),
                S( -22,  19), S(  15,  10), S(  34,   9), S(  41,   7), S(  55,  -2), S(  94, -10), S( 119, -23), S(  58, -20),
                S( -34,  14), S( -21,  11), S(   7,  16), S(  22,   9), S(   4,  15), S(  25,   3), S( -12,   3), S(  -6,   2),
                S( -65,  11), S( -62,  18), S( -42,  14), S( -32,  16), S( -36,   9), S( -27,  -5), S(  -7, -10), S( -28, -13),
                S( -80,  -6), S( -51,  -5), S( -55,  -3), S( -50,   0), S( -47,   0), S( -48, -11), S( -15, -17), S( -50, -23),
                S( -90,  -9), S( -48, -16), S( -54,  -3), S( -53,  -6), S( -45, -11), S( -36, -20), S( -21, -28), S(-119,   0),
                S( -52,  -9), S( -45,  -1), S( -35,   2), S( -31,  -3), S( -35,  -5), S( -44,  -9), S( -45,  -1), S( -50, -31)
        },
        {
                S( -40,  -6), S( -37,  53), S(  26,  38), S(  49,  20), S( 108,  17), S( 131,  -5), S(  84,  -1), S(  50,  19),
                S( -13, -22), S( -53,  28), S( -17,  46), S( -24,  62), S( -16,  85), S(  81,  44), S(  29,  48), S(  38,  32),
                S( -24, -26), S( -15,  -9), S(   5,   2), S( -13,  73), S(  10,  86), S( 111,  36), S( 116,  16), S(  38,  78),
                S( -22, -42), S( -31,  21), S( -21,  33), S( -24,  63), S( -19,  95), S(  11,  82), S(   2,  85), S(  -6, 101),
                S( -29, -28), S( -18,  21), S( -19,  10), S( -28,  64), S( -16,  44), S(  -9,  41), S(   6,  22), S(  -5,  19),
                S( -31, -31), S(  -1, -82), S( -19,   3), S( -16, -19), S( -18,  -9), S( -12,  -6), S(  12, -38), S( -13, -16),
                S( -40, -58), S(  -9, -76), S(   1, -91), S( -14, -45), S(  -8, -61), S(   9,-108), S(   4,-106), S( -34, -44),
                S( -13, -66), S( -40, -53), S( -22, -65), S( -12, -18), S( -24, -69), S( -32, -98), S( -14, -93), S( -49, -95)
        },
        {
                S( -23,-109), S( 264, -90), S( 190, -58), S( 140, -58), S(-187,   5), S( -83,  30), S(  63, -10), S(  -8, -32),
                S( 226, -64), S(  79,  23), S(  67,  25), S(  89,   8), S(  73,  19), S(  53,  40), S( -53,  57), S(-148,  26),
                S(  59,  18), S( 102,  31), S(  71,  42), S(  -5,  36), S(  66,  25), S( 119,  59), S( 134,  51), S( -34,  23),
                S(  11,   3), S(  -6,  48), S(   4,  54), S( -38,  65), S( -76,  67), S(  -9,  60), S(   3,  50), S( -96,  25),
                S( -55, -15), S(  67,  -1), S( -28,  46), S( -89,  67), S( -67,  67), S( -61,  55), S( -33,  32), S( -94,   4),
                S( -19, -18), S( -25,  14), S( -64,  36), S( -78,  50), S( -55,  47), S( -55,  39), S(   0,  10), S( -26, -13),
                S(  22, -34), S(  12, -14), S( -27,  15), S(-117,  33), S( -76,  30), S( -55,  23), S(  27, -13), S(  47, -46),
                S(  33,-112), S(  74, -66), S(  21, -36), S(-114, -10), S( -18, -47), S( -74,  -8), S(  40, -45), S(  49,-101)
        }
};


constexpr SCORE_TYPE PASSED_PAWN_BONUSES[3][8] = {
        {S(   0,   0), S(  -5,  23), S( -20,  35), S( -22,  66), S( -12, 102), S(   6, 190), S(  64, 193), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   8,  29), S(   3,  52), S(  24, 109), S(  58, 224), S( 363, 168), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  76,  27), S( -17,  41), S(  62,  74), S( 102, 166), S( 170,  88), S(   0,   0)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  17, -39), S( -27,  11), S( -10, -23), S( -13, -73), S( -10,-111), S( 186,-227)},
        {S(   0,   0), S(   0,   0), S(  -7, -26), S(  -8, -47), S( -11, -44), S(   8, -70), S( -10,-132), S(  91,-263)},
        {S(   0,   0), S(   0,   0), S(  39, -28), S(  -5,  24), S(  15,   1), S(  28,  -9), S(  25, -56), S(  24,-122)},
        {S(   0,   0), S(   0,   0), S(  -6, -15), S( -58,  59), S(   9, -40), S(   8, -14), S(  22, -55), S(  99,  52)},
        {S(   0,   0), S(   0,   0), S(  70, -22), S(  71, -28), S( -54, -47), S(   1, -98), S(  -2,-209), S(  36,-332)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS_2[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S( -25,  -9), S( -41,   3), S(  -4,  -8), S(   7, -27), S(  56,-114)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S( -17,   7), S( -29,   7), S( -33,   2), S(  -8, -26), S(  33, -71)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(  10, -24), S(  32, -27), S(   3,  12), S(  12,   4), S(  40, -57)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S(  -7,  34), S( -16,   6), S(  -2, -20), S(  23, -47), S(  39,  57)},
        {S(   0,   0), S(   0,   0), S(   0,   0), S( 217, -10), S(  65,  -5), S( -30, -12), S(  43, -58), S( 101,-168)}
};


constexpr SCORE_TYPE PHALANX_PAWN_BONUSES[8] = {S(   0,   0), S(  -3, -10), S(  -1,  -5), S(  13,   6), S(  33,  71), S(  36, 154), S( -13, 431), S(   0,   0)};

constexpr SCORE_TYPE ISOLATED_PAWN_PENALTY = S(  -7, -48);

constexpr SCORE_TYPE BISHOP_PAIR_BONUS = S(  25,  79);

constexpr SCORE_TYPE TEMPO_BONUS = S(  13,  22);

#endif //ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
