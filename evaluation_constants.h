//
// Created by Alexander Tian on 6/26/23.
//

#ifndef ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
#define ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H

#include "evaluation.h"
#include "types.h"

constexpr int GAME_PHASE_SCORES[6] = {0, 1, 1, 2, 4, 0};

constexpr int MVV_LVA_VALUES[6] = {  87, 390, 429, 561,1234,   0};


constexpr SCORE_TYPE PIECE_VALUES[6] = {S( 105, 149), S( 422, 432), S( 436, 472), S( 596, 836), S(1272,1512), S(   0,   0)};

constexpr SCORE_TYPE PIECE_SQUARE_TABLES[6][64] = {
        {
                S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55),
                S(  84, 135), S( 110, 122), S(  24, 123), S(  84,  58), S(  39,  81), S( 145,  69), S( -20, 139), S( -43, 153),
                S( -27,  62), S(   9,  43), S(  37,   9), S(  40, -27), S(  71, -38), S(  97, -15), S(  43,  15), S(   2,  39),
                S( -29,  28), S(   2,   5), S(   0,  -4), S(  20, -36), S(  28, -25), S(  29, -17), S(  22,  -5), S( -21,  12),
                S( -39,  15), S( -18,   1), S( -17,  -9), S(  -1, -16), S(   3, -15), S(   1, -16), S(   9, -15), S( -24,  -5),
                S( -42,   4), S( -22,  -2), S( -17,  -7), S( -16,  -6), S(  -3,   6), S(  -5,  -3), S(  29, -20), S( -12,  -8),
                S( -47,  17), S( -23,   4), S( -32,  19), S( -38,  12), S( -26,  22), S(  14,   6), S(  39, -17), S( -18, -12),
                S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55), S( -28, -55)
        },
        {
                S(-245, -64), S(-133, -22), S( -75,  13), S(   5, -17), S( 119, -25), S(-152,   4), S(  -8, -67), S(-156,-116),
                S( -24, -31), S( -45,   6), S(  70,  -8), S(  51,  28), S(  57,  16), S(  96, -20), S(  -6, -14), S(   5, -42),
                S( -44, -16), S(  44,   6), S(  63,  37), S(  92,  44), S( 127,  16), S( 151,  19), S( 101,  -7), S(  67, -45),
                S(   7,  -5), S(  19,  38), S(  38,  55), S(  63,  61), S(  39,  67), S(  69,  56), S(  29,  42), S(  33,   7),
                S( -15,   5), S( -10,  21), S(  14,  54), S(  16,  66), S(  28,  57), S(  25,  60), S(  43,  28), S(  -4,   8),
                S( -27, -52), S( -11,   5), S(   9,  12), S(   9,  39), S(  19,  32), S(  14,  13), S(  19,  -6), S( -19,  -8),
                S( -50, -48), S( -43, -11), S( -11, -19), S(  -4,  16), S(  -7,  28), S(   5, -19), S( -15, -15), S(  -1, -49),
                S(-140, -46), S( -33, -54), S( -62, -10), S( -51,   0), S( -30, -14), S( -26,  -9), S( -32, -31), S( -68, -68)
        },
        {
                S( -69,  -9), S(  -4,  -9), S(-121,  12), S( -77,  11), S( -75,  14), S( -77,   2), S( -17,  -2), S(  -2, -19),
                S( -40,  -1), S(  14,   2), S(  -3,  12), S( -17,   9), S(  23,  10), S(  60,  -3), S(  15,   2), S( -32, -10),
                S( -10,   3), S(  26,   6), S(  60,   9), S(  43,  11), S(  59,   4), S(  74,  20), S(  59,  12), S(  10,  14),
                S( -20,  -1), S(   8,  24), S(  17,  26), S(  59,  28), S(  40,  32), S(  49,  13), S(   9,  30), S(  -5,  11),
                S( -12, -11), S(   5,  12), S(   6,  27), S(  19,  34), S(  38,  21), S(   3,  23), S(   4,   2), S(  15, -26),
                S(  -7, -21), S(   7,   1), S(   5,  11), S(   8,  11), S(   0,  24), S(   9,   9), S(  11,  -8), S(  13, -22),
                S( -10, -29), S(   6, -29), S(  16, -16), S( -11,  -3), S(  -4,  -4), S(  -4, -22), S(  23,   0), S(   4, -44),
                S(   7, -65), S(  -9, -29), S( -31, -15), S( -33, -12), S( -43, -13), S( -30, -12), S( -40,  -5), S( -21, -46)
        },
        {
                S(  61,  10), S(  64,  13), S(  49,  17), S(  66,  16), S( 107,   1), S(  74,   3), S(  43,   9), S( 146, -10),
                S(  28,  15), S(  16,  24), S(  56,  16), S(  71,  17), S(  74,   6), S( 122, -20), S(  49,   1), S(  73,  -6),
                S( -25,  18), S(  13,   9), S(  32,   8), S(  40,   6), S(  54,  -3), S(  94, -11), S( 118, -25), S(  57, -21),
                S( -35,  12), S( -21,  10), S(   6,  15), S(  21,   8), S(   2,  15), S(  24,   2), S( -11,   2), S(  -5,   1),
                S( -66,  10), S( -63,  18), S( -43,  14), S( -34,  17), S( -37,  10), S( -27,  -6), S(  -6,  -9), S( -26, -15),
                S( -78,  -7), S( -51,  -5), S( -53,  -4), S( -50,   1), S( -46,   1), S( -46, -11), S( -14, -17), S( -48, -25),
                S( -87, -10), S( -47, -15), S( -53,  -2), S( -52,  -6), S( -44, -11), S( -34, -20), S( -20, -28), S(-115,  -1),
                S( -50,  -7), S( -44,   1), S( -34,   4), S( -30,   0), S( -34,  -2), S( -41,  -6), S( -43,   1), S( -48, -29)
        },
        {
                S( -41,  -5), S( -33,  50), S(  27,  36), S(  48,  21), S( 106,  19), S( 131,  -8), S(  81,   4), S(  51,  20),
                S( -15, -25), S( -58,  29), S( -22,  48), S( -27,  62), S( -19,  84), S(  79,  42), S(  22,  53), S(  36,  32),
                S( -23, -30), S( -16, -13), S(   0,   3), S( -16,  72), S(   7,  85), S( 110,  34), S( 116,  13), S(  39,  78),
                S( -23, -45), S( -30,  16), S( -22,  30), S( -26,  62), S( -22,  95), S(  12,  80), S(   2,  85), S(  -4,  97),
                S( -26, -30), S( -18,  17), S( -18,   9), S( -28,  63), S( -17,  44), S(  -8,  41), S(   7,  23), S(  -5,  20),
                S( -29, -30), S(   0, -80), S( -18,   5), S( -15, -17), S( -17,  -8), S( -10,  -6), S(  13, -36), S( -11, -16),
                S( -39, -54), S(  -8, -74), S(   3, -89), S( -13, -43), S(  -5, -61), S(   9,-106), S(   5,-106), S( -32, -47),
                S( -12, -64), S( -38, -53), S( -20, -64), S(  -9, -16), S( -21, -68), S( -32, -95), S( -13, -90), S( -48, -92)
        },
        {
                S( -23,-109), S( 254, -88), S( 191, -57), S( 141, -58), S(-177,   4), S( -77,  33), S(  73, -10), S(  24, -30),
                S( 231, -67), S(  77,  21), S(  72,  21), S(  97,   5), S(  75,  17), S(  64,  35), S( -49,  55), S(-149,  29),
                S(  72,  13), S( 109,  26), S(  84,  35), S(  -1,  32), S(  61,  22), S( 121,  53), S( 148,  43), S( -31,  21),
                S(  12,  -1), S(   3,  40), S(  11,  48), S( -28,  59), S( -66,  60), S(  -3,  54), S(  14,  43), S( -91,  21),
                S( -56, -18), S(  70,  -6), S( -23,  42), S( -86,  63), S( -65,  63), S( -58,  51), S( -31,  28), S( -94,   3),
                S( -17, -19), S( -25,  11), S( -64,  34), S( -76,  47), S( -54,  45), S( -55,  37), S(  -2,   9), S( -27, -12),
                S(  17, -32), S(   9, -14), S( -31,  16), S(-117,  33), S( -77,  31), S( -56,  23), S(  23, -11), S(  42, -42),
                S(  27,-105), S(  69, -63), S(  19, -33), S(-118,  -4), S( -19, -42), S( -77,  -5), S(  36, -41), S(  44, -96)
        }
};


constexpr SCORE_TYPE PASSED_PAWN_BONUSES[3][8] = {
        {S(   0,   0), S(  -6,  23), S( -22,  36), S( -24,  66), S( -11,  99), S(  16, 180), S(  65, 185), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(   6,  29), S(   1,  52), S(  25, 105), S(  70, 209), S( 356, 169), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  77,  26), S( -20,  38), S(  65,  66), S( 109, 156), S( 131,  75), S(   0,   0)}
};


constexpr SCORE_TYPE PASSED_PAWN_BLOCKERS[6][8] = {
        {S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0), S(   0,   0)},
        {S(   0,   0), S(   0,   0), S(  21, -43), S( -27,  10), S( -11, -22), S( -12, -71), S(  -6,-110), S( 183,-213)},
        {S(   0,   0), S(   0,   0), S(  -8, -27), S(  -7, -47), S( -11, -44), S(   8, -69), S(  -8,-130), S(  88,-246)},
        {S(   0,   0), S(   0,   0), S(  34, -23), S(  -5,  24), S(  15,   3), S(  27,  -5), S(  24, -50), S(  25,-105)},
        {S(   0,   0), S(   0,   0), S(  -3, -21), S( -55,  56), S(   8, -36), S(   6,  -8), S(  24, -58), S( 101,  61)},
        {S(   0,   0), S(   0,   0), S(  68, -16), S(  65, -26), S( -48, -44), S(  -5, -89), S( -16,-190), S(  38,-310)}
};


constexpr SCORE_TYPE PHALANX_PAWN_BONUSES[8] = {S(   0,   0), S(  -3,  -9), S(   0,  -5), S(  13,   7), S(  33,  67), S(  60, 121), S(   3, 407), S(   0,   0)};

constexpr SCORE_TYPE ISOLATED_PAWN_PENALTY = S(  -7, -47);

constexpr SCORE_TYPE BISHOP_PAIR_BONUS = S(  25,  79);

#endif //ALTAIRCHESSENGINE_EVALUATION_CONSTANTS_H
